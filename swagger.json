{
    "openapi" : "3.0.0",
    "info" : {
        "title" : "E-Commerce BingleShop Docs",
        "version" : "1.0"
    },

    "servers" : [
        {
            "url": "http://localhost:8889",
            "description": "Development server"
        },
        {
            "url": "http://34.128.104.172:8889",
            "description": "Tweetion server"
        }
    ],

    "tags" : [
        {
            "name" : "user",
            "description" : "All routes about user endpoints"
        },
        {
            "name" : "tweet",
            "description" : "All routes about tweet endpoints"
        },
        {
            "name" : "order",
            "description" : "All routes about order endpoints"
        }
    ],

    "paths" : {
        "/api/user" : {
            "get" : {
                "tags" : ["user"],
                "summary" : "find all user",
                "description" : "returns all user data details",
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/UserGet"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no user yet"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            },
            "patch" : {
                "tags" : ["user"],
                "summary" : "update user details by id",
                "description" : "require a **header token** and only can be done with **user role**",
                "parameters" : [
                    {
                        "in" : "header",
                        "name" : "token",
                        "description" : "user token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "requestBody" : {
                    "description" : "fields that need to be filled in",
                    "required" : true,
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/UserUpdateFields"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/UserUpdate"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no user with ID {id} Unauthorized to make changes"
                    },
                    "401" : {
                        "description" : "Unauthorized to make changes"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            },
            "delete" : {
                "tags" : ["user"],
                "summary" : "delete user by id",
                "description" : "require a **header token** and only can be done with **user role**",
                "parameters" : [
                    {
                        "in" : "header",
                        "name" : "token",
                        "description" : "user token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "User has been deleted"
                    },
                    "400" : {
                        "description" : "There is no user with ID {id}"
                    },
                    "401" : {
                        "description" : "Unauthorized to make changes"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            }
        },
        "/api/user/verify" : {
            "get" : {
                "tags" : ["user"],
                "summary" : "verify user",
                "description" : "verify user with the link sent to the email",
                "responses" : {
                    "200" : {
                        "description" : "User verified and confirmed"
                    },
                    "500" : {
                        "description" : "Invalid Token / Internal server error"
                    }
                }
            }
        },
        "/api/register" : {
            "post" : {
                "tags" : ["user"],
                "summary" : "create new user",
                "description" : "",
                "requestBody" : {
                    "description" : "fields that need to be filled in",
                    "required" : true,
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/UserRegisterFields"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/UserRegister"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "Invalid input / Email is already registered"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            }
        },
        "/api/login" : {
            "post" : {
                "tags" : ["user"],
                "summary" : "logs user into the system",
                "description" : "",
                "requestBody" : {
                    "description" : "fields that need to be filled in",
                    "required" : true,
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/UserLoginFields"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "type" : "object",
                                "example" : {
                                    "data" : "token"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "Email is not registered yet / Password invalid"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            }
        },
        "/api/avatar" : {
            "post" : {
                "tags" : ["user"],
                "summary" : "insert a photo",
                "description" : "require a **header token** and only can be done with **user role**",
                "parameters" : [
                    {
                        "in" : "header",
                        "name" : "token",
                        "description" : "user token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "requestBody" : {
                    "description" : "upload image file with format .jpg or .png",
                    "required" : true,
                    "content" : {
                        "image/*" : {
                            "schema" : {
                                "type" : "string",
                                "format" : "binary"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "type" : "object",
                                "example" : {
                                    "data" : "Success update avatar"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "Invalid token / Unauthenticated / Please verify your email first"
                    },
                    "401" : {
                        "description" : "Unauthorized to make changes"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            }
        },


        "/api/tweet" : {
            "get" : {
                "tags" : ["tweet"],
                "summary" : "find all tweet",
                "description" : "returns all tweet data details",
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/TweetGet"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no tweet yet"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            },
            "post" : {
                "tags" : ["tweet"],
                "summary" : "create new tweet",
                "description" : "require a **header token** and only can be done with **admin role**",
                "consumes" : ["application/json"],
                "produces" : ["application/json"],
                "parameters" : [
                    {
                        "in" : "header",
                        "name" : "token",
                        "description" : "admin token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "requestBody" : {
                    "description" : "fields that need to be filled in",
                    "required" : true,
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/TweetCreateFields"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/TweetCreate"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "Invalid input"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            }
        },
        "/api/tweet/{id}" : {
            "patch" : {
                "tags" : ["tweet"],
                "summary" : "update tweet by id",
                "description" : "require a **header token** and only can be done with **admin role**",
                "parameters" : [
                    {
                        "in" : "header",
                        "name" : "token",
                        "description" : "admin token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "path",
                        "name" : "id",
                        "description" : "the tweet id",
                        "required" : true,
                        "schema" : {
                            "type" : "integer"
                        }
                    }
                ],
                "requestBody" : {
                    "description" : "fields that need to be filled in",
                    "required" : true,
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/TweetUpdateFields"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/TweetUpdate"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no tweet with ID {id}"
                    },
                    "401" : {
                        "description" : "Invalid token"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            },
            "delete" : {
                "tags" : ["tweet"],
                "summary" : "delete tweet by id",
                "description" : "require a **header token** and only can be done with **admin role**",
                "parameters" : [
                    {
                        "in" : "header",
                        "name" : "token",
                        "description" : "admin token",
                        "required" : true,
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "path",
                        "name" : "id",
                        "description" : "the tweet id",
                        "required" : true,
                        "schema" : {
                            "type" : "integer"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Tweet has been deleted"
                    },
                    "400" : {
                        "description" : "There is no tweet with ID {id}"
                    },
                    "401" : {
                        "description" : "Invalid token"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            }
        },
        "/api/tweet" : {
            "get" : {
                "tags" : ["tweet"],
                "summary" : "find all tweet",
                "description" : "returns all tweet data details",
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/GetTweet"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no tweet yet"
                    },
                    "500" : {
                        "description" : "Internal server error"
                    }
                }
            },
            "post" : {
                "tags" : ["tweet"],
                "summary" : "create tweet",
                "description" : "require a header token and admin authentication",
                "parameters" : [
                    {
                        "in" : "formData",
                        "name" : "tweet",
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "quantity",
                        "schema" : {
                            "type" : "integer"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "price",
                        "schema" : {
                            "type" : "integer"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "avatar",
                        "description": "upload image file with format .jpg or .png",
                        "schema" : {
                            "type" : "file",
                            "format": "binary"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/CreateTweet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tweet/:id": {
            "patch" : {
                "tags" : ["tweet"],
                "summary" : "update tweet details by id",
                "description" : "require a header token",
                "parameters" : [
                    {
                        "in" : "path",
                        "name" : "id",
                        "required": true,
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "header",
                        "name" : "token",
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "tweet",
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "quantity",
                        "schema" : {
                            "type" : "integer"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "price",
                        "schema" : {
                            "type" : "integer"
                        }
                    },
                    {
                        "in" : "formData",
                        "name" : "avatar",
                        "description": "upload image file with format .jpg or .png",
                        "schema" : {
                            "type" : "file",
                            "format": "binary"
                        }
                    }

                ],
                "responses" : {
                    "200" : {
                        "description" : "Success",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/UpdateTweet"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no tweet with ID {id}"
                    },
                    "401" : {
                        "description" : "Unauthorized to make changes"
                    }
                }
            },
            "delete" : {
                "tags" : ["tweet"],
                "summary" : "delete tweet by id",
                "description" : "require a user & tweet id",
                "parameters" : [
                    {
                        "in" : "path",
                        "name" : "id",
                        "required": true,
                        "schema" : {
                            "type" : "string"
                        }
                    },
                    {
                        "in" : "header",
                        "name" : "token",
                        "schema" : {
                            "type" : "string"
                        }
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "Tweet has been deleted",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/DeleteTweet"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "There is no tweet with ID {id}"
                    },
                    "401" : {
                        "description" : "Unauthorized to make changes"
                    }
                }
            }
        }
    },

    "components" : {
        "schemas" : {
            "UserGet" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "name" : { "type" : "string" },
                    "email" : { "type" : "string" },
                    "password" : { "type" : "string" },
                    "street" : { "type" : "string" },
                    "city" : { "type" : "string" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "role" : { "type" : "string", "description" : "value must be 'user/admin'" },
                    "confirmed" : { "type" : "boolean" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : [
                    {
                        "id" : "1",
                        "name" : "admin",
                        "email" : "admin@gmail.com",
                        "password" : "$23$10$DS4QCrAT7IDrUnrapZjtCemdB8W6VT0fP3EXR9glgNR9jegIazd/.",
                        "street" : "Jl. Mawar",
                        "city" : "Jakarta",
                        "avatar" : "URL",
                        "role" : "admin",
                        "confirmed" : true,
                        "createdAt" : "2023-04-05T08:36:26.350Z",
                        "updatedAt" : "2023-04-05T08:36:26.350Z"
                    },
                    {
                        "id" : "2",
                        "name" : "user",
                        "email" : "customer@gmail.com",
                        "password" : "$23$10$DS4QCrAT7IDrUnrapZjtCemdB8W6VT0fP3EXR9glgNR9jegIazd/.",
                        "street" : "Jl. Mawar",
                        "city" : "Bengkulu",
                        "avatar" : null,
                        "role" : "user",
                        "confirmed" : true,
                        "createdAt" : "2023-04-05T08:36:26.350Z",
                        "updatedAt" : "2023-04-05T08:36:26.350Z"
                    }
                ]
            },
            "UserRegisterFields" : {
                "type" : "object",
                "properties" : {
                    "name" : { "type" : "string" },
                    "email" : { "type" : "string" },
                    "password" : { "type" : "string" },
                    "street" : { "type" : "string" },
                    "city" : { "type" : "string" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "role" : { "type" : "string", "description" : "value must be 'user/admin'" }
                }
            },
            "UserRegister" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "name" : { "type" : "string" },
                    "email" : { "type" : "string" },
                    "password" : { "type" : "string" },
                    "street" : { "type" : "string" },
                    "city" : { "type" : "string" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "role" : { "type" : "string", "description" : "value must be 'user/admin'" },
                    "confirmed" : { "type" : "boolean" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : {
                    "id" : "1",
                    "name" : "user",
                    "email" : "admin@gmail.com",
                    "password" : "$23$10$DS4QCrAT7IDrUnrapZjtCemdB8W6VT0fP3EXR9glgNR9jegIazd/.",
                    "street" : "Jl. Mawar",
                    "city" : "Jakarta",
                    "avatar" : null,
                    "role" : "user",
                    "confirmed" : false,
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "UserLoginFields" : {
                "type" : "object",
                "properties" : {
                    "email" : { "type" : "string", "format" : "email" },
                    "password" : { "type" : "string" }
                }
            },
            "UserUpdateFields" : {
                "type" : "object",
                "properties" : {
                    "name" : { "type" : "string" },
                    "email" : { "type" : "string" },
                    "street" : { "type" : "string" },
                    "city" : { "type" : "string" }
                }
            },
            "UserUpdate" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "name" : { "type" : "string" },
                    "email" : { "type" : "string" },
                    "password" : { "type" : "string" },
                    "street" : { "type" : "string" },
                    "city" : { "type" : "string" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "role" : { "type" : "string", "description" : "value must be 'user/admin'" },
                    "confirmed" : { "type" : "boolean" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : {
                    "id" : "1",
                    "name" : "admin",
                    "email" : "admin@gmail.com",
                    "password" : "$23$10$DS4QCrAT7IDrUnrapZjtCemdB8W6VT0fP3EXR9glgNR9jegIazd/.",
                    "street" : "Jl. Mawar",
                    "city" : "Jakarta",
                    "avatar" : "URL",
                    "role" : "admin",
                    "confirmed" : false,
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "TweetGet" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : [
                    {
                        "id" : "1",
                        "userID" : "1",
                        "tweet" : "Oreo 20gr",
                        "quantity" : 20,
                        "price" : 2000,
                        "avatar" : "URL",
                        "createdAt" : "2023-04-05T08:36:26.350Z",
                        "updatedAt" : "2023-04-05T08:36:26.350Z"
                    },
                    {
                        "id" : "2",
                        "userID" : "1",
                        "tweet" : "Pocari Sweat 300ml",
                        "quantity" : 30,
                        "price" : 5000,
                        "avatar" : "URL",
                        "createdAt" : "2023-04-05T08:36:26.350Z",
                        "updatedAt" : "2023-04-05T08:36:26.350Z"
                    }
                ]
            },
            "TweetCreateFields" : {
                "type" : "object",
                "properties" : {
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "example" : "URL", "description" : "expected value is a URL" }
                }
            },
            "TweetCreate" : {
                "type" : "object",
                "properties" : {
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : {
                    "userID" : "1",
                    "tweet" : "Oreo 20gr",
                    "quantity" : 20,
                    "price" : 2000,
                    "avatar" : "URL",
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "TweetUpdateFields" : {
                "type" : "object",
                "properties" : {
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" }
                }
            },
            "TweetUpdate" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : {
                    "id" : "1",
                    "userID" : "1",
                    "tweet" : "Oreo 20gr",
                    "quantity" : 20,
                    "price" : 2000,
                    "avatar" : "URL",
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "OrderGet" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "tweetID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "userID" : { "type" : "integer" },
                    "toStreet" : { "type" : "string" },
                    "toCity" : { "type" : "string" },
                    "status" : { "type" : "string" },
                    "createdAt" : { "type" : "date" },
                    "updatedAt" : { "type" : "date" }
                },
                "example" : [
                    {
                        "id" : 1,
                        "tweetID" : 1,
                        "tweet" : "Oreo 20gr",
                        "userID" : 2,
                        "toStreet" : "Jl. Pahlawan",
                        "toCity" : "Jakarta",
                        "status" : "Pending",
                        "createdAt" : "2023-04-05T08:36:26.350Z",
                        "updatedAt" : "2023-04-05T08:36:26.350Z"
                    },
                    {
                        "id" : 2,
                        "tweetID" : 2,
                        "tweet" : "Pocari Sweat 300ml",
                        "userID" : 3,
                        "toStreet" : "Jl. Pahlawan",
                        "toCity" : "Jakarta",
                        "status" : "Pending",
                        "createdAt" : "2023-04-05T08:36:26.350Z",
                        "updatedAt" : "2023-04-05T08:36:26.350Z"
                    }
                ]
            },
            "OrderCreateFields" : {
                "type" : "object",
                "properties" : {
                    "tweetID" : { "type" : "integer" }
                }
            },
            "OrderCreate" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "tweetID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "userID" : { "type" : "integer" },
                    "toStreet" : { "type" : "string" },
                    "toCity" : { "type" : "string" },
                    "status" : { "type" : "string" },
                    "createdAt" : { "type" : "date" },
                    "updatedAt" : { "type" : "date" }
                },
                "example" : {
                    "id" : 1,
                    "tweetID" : 1,
                    "tweet" : "Oreo 20gr",
                    "userID" : 2,
                    "toStreet" : "Jl. Pahlawan",
                    "toCity" : "Jakarta",
                    "status" : "Pending",
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "OrderUpdateFields" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "tweetID" : { "type" : "integer" },
                    "toStreet" : { "type" : "string" },
                    "toCity" : { "type" : "string" }
                }
            },
            "OrderUpdate" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "tweetID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "userID" : { "type" : "integer" },
                    "toStreet" : { "type" : "string" },
                    "toCity" : { "type" : "string" },
                    "status" : { "type" : "string" },
                    "createdAt" : { "type" : "date" },
                    "updatedAt" : { "type" : "date" }
                },
                "example" : {
                    "id" : 1,
                    "tweetID" : 1,
                    "tweet" : "Oreo 20gr",
                    "userID" : 2,
                    "toStreet" : "Jl. Pahlawan",
                    "toCity" : "Jakarta",
                    "status" : "Pending",
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "OrderUpdateStatus" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "userID" : { "type" : "integer" },
                    "tweetID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "toStreet" : { "type" : "string" },
                    "toCity" : { "type" : "string" },
                    "status" : { "type" : "string" },
                    "createdAt" : { "type" : "date-time" },
                    "updatedAt" : { "type" : "date-time" }
                },
                "example" : {
                    "id" : 1,
                    "userID" : 2,
                    "tweetID" : 1,
                    "tweet" : "Oreo 20gr",
                    "toStreet" : "Jl. Pahlawan",
                    "toCity" : "Jakarta",
                    "status" : "Paid",
                    "createdAt" : "2023-04-05T08:36:26.350Z",
                    "updatedAt" : "2023-04-05T08:36:26.350Z"
                }
            },
            "GetTweet" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "createdAt": {"type": "string"},
                    "updatedAt": {"type": "string"}
                },
                "example" : [
                    {
                        "id" : "1",
                        "user_id" : "1",
                        "tweet_name" : "sepatu adidas",
                        "quantity" : "50",
                        "price" : "1000000",
                        "avatar" : "URL",
                        "createdAt": "2023-04-05T08:00:36.414Z",
                        "updatedAt": "2023-04-05T08:00:36.414Z"
                    },
                    {
                        "id" : "2",
                        "user_id" : "1",
                        "tweet_name" : "kemeja hitam",
                        "quantity" : "39",
                        "price" : "150000",
                        "avatar" : "URL",
                        "createdAt": "2023-04-05T08:00:36.414Z",
                        "updatedAt": "2023-04-05T08:00:36.414Z"
                    }
                ]
            },
            "CreateTweet" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" }
                },
                "example" : [
                    {
                        "id" : "1",
                        "userID" : "1",
                        "tweet" : "sepatu adidas",
                        "quantity" : "50",
                        "price" : "1000000",
                        "avatar" : "URL",
                        "updatedAt": "2023-04-05T08:00:36.414Z",
                        "createdAt": "2023-04-05T08:00:36.414Z"
                    }
                ]
            },
            "UpdateTweet" : {
                "type" : "object",
                "properties" : {
                    "id" : { "type" : "integer" },
                    "userID" : { "type" : "integer" },
                    "tweet" : { "type" : "string" },
                    "quantity" : { "type" : "integer" },
                    "price" : { "type" : "integer" },
                    "avatar" : { "type" : "string", "description" : "expected value is a URL" },
                    "updatedAt" : { "type" : "string"},
                    "createdAt" : { "type" : "string"}
                },
                "example" : [
                    {
                        "id" : "1",
                        "userID" : "1",
                        "tweet" : "sepatu adidas",
                        "quantity" : "50",
                        "price" : "1000000",
                        "avatar" : "URL",
                        "updatedAt": "2023-04-05T08:00:36.414Z",
                        "createdAt": "2023-04-06T08:00:36.414Z"
                    }
                ]
            },
            "DeleteTweet" : {
                "type" : "object",
                "example" : [
                    {
                        "status": "Success",
                        "data": "Tweet has been deleted"
                    }
                ]
            } 
        }
    }
}